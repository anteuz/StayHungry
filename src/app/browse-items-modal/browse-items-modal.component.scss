// Enhanced Browse Items Modal Styling with Design Tokens

.header-title {
  display: flex;
  align-items: center;
  justify-content: center;
  gap: var(--space-sm);
}

.header-icon {
  font-size: 1.3em;
  color: var(--ion-color-secondary-contrast);
}

.sort-segment {
  --background: var(--ion-color-light);
  margin: var(--space-sm);
  border-radius: var(--radius-lg);
  box-shadow: var(--shadow-sm);
  width: calc(100% - 2 * var(--space-sm)) !important;
  max-width: calc(100% - 2 * var(--space-sm)) !important;
}

.sort-button {
  --color: var(--ion-color-medium);
  --color-checked: var(--ion-color-primary);
  --indicator-color: var(--ion-color-primary);
  font-size: var(--font-size-sm);
  transition: all 0.2s ease-in-out;
  
  &.segment-button-checked {
    --color: var(--ion-color-primary);
    font-weight: 600;
  }
  
  ion-icon {
    margin-top: var(--space-xs);
    font-size: 1.1em;
  }
}

.items-list {
  padding: var(--space-sm);
}

.item-sliding {
  margin-bottom: var(--space-xs);
  border-radius: var(--radius-lg);
  overflow: hidden;
  box-shadow: var(--shadow-sm);
  transition: all 0.2s ease-in-out;
  position: relative; // Add relative positioning for absolute category indicator
  
  @media (prefers-reduced-motion: no-preference) {
    &:hover {
      box-shadow: var(--shadow-md);
      transform: translateY(-1px);
    }
  }
}

.item-card {
  --background: var(--ion-color-light);
  --border-radius: var(--radius-lg);
  --padding-start: calc(7px + var(--space-md)); // Account for category indicator width + 2px offset
  --padding-end: var(--space-md);
  --padding-top: 0;
  --padding-bottom: 0;
  --min-height: 32px;
  position: relative;
  
  // Force override Ionic's default padding
  &.item {
    --padding-top: 0 !important;
    --padding-bottom: 0 !important;
    --inner-padding-top: 0 !important;
    --inner-padding-bottom: 0 !important;
    min-height: 32px !important;
  }
  
  // Always ensure rounded corners on all sides
  border-radius: var(--radius-lg) !important;
  
  &:hover {
    --background: var(--ion-color-light-tint);
  }
}

.category-indicator {
  position: absolute;
  left: 0; // Position at the very left edge
  top: 0;
  bottom: 0;
  width: 5px;
  z-index: 2; // Increase z-index to ensure it's on top of the item
  transition: all 0.2s ease-in-out;
  border-top-left-radius: var(--radius-lg);
  border-bottom-left-radius: var(--radius-lg);
  // Use background-color instead of border-left to avoid white line artifacts
  background-color: var(--category-color, var(--ion-color-primary));
  // Remove any potential white artifacts
  border: none !important;
  box-shadow: none !important;
}

.item-label {
  flex: 1;
  margin: 0;
}

.item-name {
  font-size: var(--font-size-base);
  font-weight: 500;
  color: var(--ion-color-dark);
  margin: 0 0 var(--space-xs) 0;
}

.usage-info {
  font-size: var(--font-size-xs);
  color: var(--ion-color-medium);
  margin: 0;
  font-weight: 400;
}

.add-icon {
  font-size: 1.5em;
  opacity: 0.7;
  transition: all 0.2s ease-in-out;
  
  @media (prefers-reduced-motion: no-preference) {
    .item-card:hover & {
      opacity: 1;
      transform: scale(1.1);
    }
  }
}

.empty-state {
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  padding: var(--space-3xl);
  text-align: center;
  height: 60vh;
}

.empty-icon {
  font-size: 4em;
  margin-bottom: var(--space-lg);
  opacity: 0.5;
}

.empty-title {
  font-size: var(--font-size-xl);
  font-weight: 600;
  color: var(--ion-color-dark);
  margin: 0 0 var(--space-md) 0;
}

.empty-description {
  font-size: var(--font-size-base);
  color: var(--ion-color-medium);
  line-height: 1.5;
  max-width: 300px;
  margin: 0;
}

// Enhanced item options
ion-item-options {
  ion-item-option {
    font-size: var(--font-size-sm);
    font-weight: 500;
    
    ion-icon {
      font-size: 1.1em;
      margin-bottom: var(--space-xs);
    }
  }
}

// Global dark theme overrides that bypass Angular ViewEncapsulation
:host-context(body.dark-theme) {
  // Modal backdrop and content overrides
  ion-modal {
    --background: var(--ion-color-step-50) !important;
  }
  
  ion-content {
    --background: var(--ion-color-step-50) !important;
  }
  
  // Modal header overrides - target specific toolbar classes
  ion-header {
    ion-toolbar.toolbar-title-default {
      --background: var(--ion-color-step-150) !important;
      --color: var(--ion-color-step-950) !important;
      --border-color: var(--ion-color-step-200) !important;
    }
    
    ion-toolbar.toolbar-segment {
      --background: var(--ion-color-step-100) !important;
      --color: var(--ion-color-step-950) !important;
      --border-color: var(--ion-color-step-200) !important;
    }
  }
  
  // Sort controls overrides
  .sort-segment {
    --background: var(--ion-color-step-100) !important;
    border: 1px solid var(--ion-color-step-200) !important;
    width: calc(100% - 2 * var(--space-sm)) !important;
    max-width: calc(100% - 2 * var(--space-sm)) !important;
  }
  
  .sort-button {
    --color: var(--ion-color-step-400) !important; // Lighter gray for unselected
    --color-checked: var(--ion-color-primary) !important;
    --indicator-color: var(--ion-color-primary) !important;
    
    &.segment-button-checked {
      --color: var(--ion-color-primary) !important;
      font-weight: 600 !important;
    }
    
    ion-label {
      color: inherit !important;
    }
    
    ion-icon {
      color: inherit !important;
    }
  }
  
  .item-card,
  ion-item.item-card {
    --background: var(--ion-color-step-150) !important;
    background: var(--ion-color-step-150) !important;
    border: 1px solid var(--ion-color-step-200) !important;
    box-shadow: 0 1px 2px rgba(0, 0, 0, 0.2) !important;
  }
  
  .item-sliding .item-card {
    --background: var(--ion-color-step-150) !important;
    background: var(--ion-color-step-150) !important;
    border: 1px solid var(--ion-color-step-200) !important;
  }
  
  .item-name,
  h3.item-name,
  .item-label .item-name,
  ion-label .item-name {
    color: var(--ion-color-step-950) !important;
    font-weight: 600 !important;
  }
  
  .category-indicator {
    box-shadow: none !important; // Remove any box-shadow that might cause artifacts
    border: none !important;
  }
}

// Additional aggressive dark mode overrides for Ionic classes
:host-context(body.dark-theme) {
  // Target specific Ionic toolbar classes
  ion-toolbar.toolbar-title-default.ion-color-secondary {
    --background: var(--ion-color-step-150) !important;
    --color: var(--ion-color-step-950) !important;
    --border-color: var(--ion-color-step-200) !important;
  }
  
  ion-toolbar.toolbar-segment.ion-color-light {
    --background: var(--ion-color-step-100) !important;
    --color: var(--ion-color-step-950) !important;
    --border-color: var(--ion-color-step-200) !important;
  }
  
  // Target segment buttons specifically
  ion-segment-button.sort-button {
    --color: var(--ion-color-step-400) !important; // Lighter gray for unselected
    --color-checked: var(--ion-color-primary) !important;
    --indicator-color: var(--ion-color-primary) !important;
    
    &.segment-button-checked {
      --color: var(--ion-color-primary) !important;
      font-weight: 600 !important;
    }
    
    ion-label {
      color: inherit !important;
    }
    
    ion-icon {
      color: inherit !important;
    }
  }
  
  // Target segment button labels and icons specifically
  ion-segment-button ion-label {
    color: var(--ion-color-step-400) !important; // Lighter gray for unselected
  }
  
  ion-segment-button.segment-button-checked ion-label {
    color: var(--ion-color-primary) !important;
  }
  
  ion-segment-button ion-icon {
    color: var(--ion-color-step-400) !important; // Lighter gray for unselected
  }
  
  ion-segment-button.segment-button-checked ion-icon {
    color: var(--ion-color-primary) !important;
  }
  
  // Fix segment width and centering
  ion-segment.sort-segment {
    width: calc(100% - 2 * var(--space-sm)) !important;
    max-width: calc(100% - 2 * var(--space-sm)) !important;
    margin: 0 auto !important;
  }
  
  // Ensure category indicators have no white artifacts
  .category-indicator {
    background-color: var(--category-color, var(--ion-color-primary)) !important;
    border: none !important;
    box-shadow: none !important;
    outline: none !important;
  }
  
  // Add padding between header and tabs
  ion-header {
    ion-toolbar:first-child {
      margin-bottom: var(--space-sm) !important;
    }
    
    ion-toolbar:last-child {
      margin-top: var(--space-sm) !important;
    }
  }
  
  // Target the specific toolbar background that's causing the white panel
  ion-toolbar.ion-color-light {
    --background: var(--ion-color-step-100) !important;
    background: var(--ion-color-step-100) !important;
  }
  
  // Target the toolbar background more aggressively
  ion-toolbar.toolbar-segment.ion-color-light {
    --background: var(--ion-color-step-100) !important;
    background: var(--ion-color-step-100) !important;
    --color: var(--ion-color-step-950) !important;
    color: var(--ion-color-step-950) !important;
  }
  
  // Target the toolbar background at the element level
  ion-toolbar[color="light"] {
    --background: var(--ion-color-step-100) !important;
    background: var(--ion-color-step-100) !important;
    --color: var(--ion-color-step-950) !important;
    color: var(--ion-color-step-950) !important;
  }
  
  // Target the toolbar background with maximum specificity
  ion-header ion-toolbar[color="light"].ion-color-light.toolbar-segment {
    --background: var(--ion-color-step-100) !important;
    background: var(--ion-color-step-100) !important;
    --color: var(--ion-color-step-950) !important;
    color: var(--ion-color-step-950) !important;
  }
  
  // Target the toolbar background with even more specificity
  ion-header ion-toolbar[color="light"].ion-color-light.toolbar-segment.toolbar-label {
    --background: var(--ion-color-step-100) !important;
    background: var(--ion-color-step-100) !important;
    --color: var(--ion-color-step-950) !important;
    color: var(--ion-color-step-950) !important;
  }
  
  // Target the secondary toolbar (header)
  ion-header ion-toolbar[color="secondary"].ion-color-secondary.toolbar-title-default {
    --background: var(--ion-color-step-150) !important;
    background: var(--ion-color-step-150) !important;
    --color: var(--ion-color-step-950) !important;
    color: var(--ion-color-step-950) !important;
  }
  
  // Target the light toolbar (tabs) with maximum specificity
  ion-header ion-toolbar[color="light"].ion-color-light.toolbar-segment.toolbar-label.ion-color-light {
    --background: var(--ion-color-step-100) !important;
    background: var(--ion-color-step-100) !important;
    --color: var(--ion-color-step-950) !important;
    color: var(--ion-color-step-950) !important;
  }
}

// Accessibility improvements
@media (prefers-reduced-motion: reduce) {
  .item-sliding,
  .add-icon,
  .sort-button,
  .category-indicator {
    transition: none;
  }
  
  .item-sliding:hover {
    transform: none;
  }
  
  .add-icon:hover {
    transform: none;
  }
}

// Large screen optimizations
@media (min-width: 768px) {
  .items-list {
    padding: var(--space-md) var(--space-lg);
  }
  
  .item-card {
    --padding-top: var(--space-md);
    --padding-bottom: var(--space-md);
  }
}