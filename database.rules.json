{
  "rules": {
    "users": {
      "$uid": {
        // Users can only read and write their own data
        ".read": "auth != null && auth.uid == $uid",
        ".write": "auth != null && auth.uid == $uid",
        
        // Shopping lists - users can only access their own
        "shopping-list": {
          ".read": "auth != null && auth.uid == $uid",
          ".write": "auth != null && auth.uid == $uid",
          "$listId": {
            ".read": "auth != null && auth.uid == $uid",
            ".write": "auth != null && auth.uid == $uid",
            ".validate": "newData.hasChildren(['uuid', 'items'])"
          }
        },
        
        // Recipes - users can only access their own
        "recipes": {
          ".read": "auth != null && auth.uid == $uid",
          ".write": "auth != null && auth.uid == $uid",
          "$recipeId": {
            ".read": "auth != null && auth.uid == $uid",
            ".write": "auth != null && auth.uid == $uid",
            ".validate": "newData.hasChildren(['uuid', 'name'])"
          }
        },
        
        // Simple items - users can only access their own
        "items": {
          ".read": "auth != null && auth.uid == $uid",
          ".write": "auth != null && auth.uid == $uid",
          "$itemId": {
            ".read": "auth != null && auth.uid == $uid",
            ".write": "auth != null && auth.uid == $uid",
            ".validate": "newData.hasChildren(['uuid', 'itemName'])"
          }
        },
        
        // Weekly menu - users can only access their own
        "weekly-menu": {
          ".read": "auth != null && auth.uid == $uid",
          ".write": "auth != null && auth.uid == $uid",
          "$menuId": {
            ".read": "auth != null && auth.uid == $uid",
            ".write": "auth != null && auth.uid == $uid"
          }
        },
        
        // User profile data - users can only access their own
        "profile": {
          ".read": "auth != null && auth.uid == $uid",
          ".write": "auth != null && auth.uid == $uid",
          ".validate": "newData.hasChildren(['email', 'uid'])"
        }
      }
    },
    
    // Deny access to all other paths
    "$other": {
      ".read": false,
      ".write": false
    }
  }
}
